- name: install tomcat applicaction
  become: yes
  hosts: all
  vars:
    tomcat_home_dir: /opt/tomcat
    tomcat_shell_dir: /bin/false
    tomcat_user: tomcat
    tomcat_download_url: https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.65/bin/apache-tomcat-9.0.65.tar.gz
    tomcat_download_location: /tmp/apache-tomcat-9.0.65.tar.gz
    tomcat_service_file_location: /etc/systemd/system/tomcat.service
    tomcat_users_location: /opt/tomcat/latest/conf/tomcat-users.xml
    tomcat_manager_conf_location: /opt/tomcat/latest/webapps/manager/META-INF/context.xml
    tomcat_hostmanager_conf_location: /opt/tomcat/latest/webapps/host-manager/META-INF/context.xml

  tasks: 
    - name: installing java-11
      ansible.builtin.apt:
        name: "{{ java_package_name }}"
        update_cache: yes
        state: present
      when: ansible_facts["distribution"]=="ubuntu"
    - name: install java for CentOS
      ansible.builtin.yum:
        name: "{{ java_package_name }}"
        update_cache: yes
        state: present
      when: ansible_facts["distribution"]=="CentOS"  
    - name: creating new user
      ansible.builtin.user:
        name: tomcat
        create_home: yes
        shell: "{{ tomcat_shell_dir }}"
        home: "{{ tomcat_home_dir }}"
    - name: install tomcat
      ansible.builtin.get_url:
        dest: "{{ tomcat_download_location }}"
        url: "{{ tomcat_download_url }}"
    - name: extract tomcat
      ansible.builtin.unarchive:
        src: "{{ tomcat_download_location }}"
        dest: "{{ tomcat_home_dir }}"
        remote_src: yes   
    - name: Flush handlers
      meta: flush_handlers
    - name: create symbolic link
      ansible.builtin.file:
        src: "{{ tomcat_home_dir }}/apache-tomcat-9.0.65"
        dest: "{{ tomcat_home_dir }}/latest"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_user }}"
        state: link
    - name: Recursively change ownership of a directory
      ansible.builtin.file:
        path: "{{ tomcat_home_dir }}"
        state: directory
        recurse: yes
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_user }}"
    - name: Give execute permissions to the tomcat file
      ansible.builtin.file:
        path: "{{ item }}"
        mode: "+x"
      with_fileglob:
         - "{{ tomcat_home_dir }}/latest/bin/*.sh" 
    - name: tomcat service file 
      ansible.builtin.copy:
        src: "{{ tomcat_service }}"
        dest: "{{ tomcat_service_file_location }}"
    - name: restart the tomcat service
      ansible.builtin.systemd:
        name: "{{ tomcat_user }}"
        state: started
        daemon_reload: yes
        enabled: yes
    - name: copy the tomcat users xml
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: "{{ tomcat_users_location }}"
      notify:
        restart tomcat
    - name: copy manager context xml
      ansible.builtin.copy:
        src: manager-context.xml
        dest: "{{ tomcat_manager_conf_location }}"
      notify:
        restart tomcat
    - name: copy host manager context xml
      ansible.builtin.copy:
        src: hostmanager-context.xml
        dest: "{{ tomcat_hostmanager_conf_location }}"
      notify:
        restart tomcat
  handlers:
    - name: restart tomcat
      ansible.builtin.systemd:
        name: tomcat
        state: restarted     
    